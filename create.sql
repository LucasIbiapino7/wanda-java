
    create table tb_badges (
        id bigint generated by default as identity,
        icon_url varchar(255),
        name varchar(255),
        primary key (id)
    );

    create table tb_challenge (
        challenged_id bigint,
        challenger_id bigint,
        created_at TIMESTAMP WITHOUT TIME ZONE,
        id bigint generated by default as identity,
        match_id bigint unique,
        status enum ('ACCEPTED','DECLINED','PENDING'),
        primary key (id)
    );

    create table tb_function (
        id bigint generated by default as identity,
        player_id bigint,
        function TEXT,
        name varchar(255),
        primary key (id)
    );

    create table tb_log_answers_agents (
        assistant_style tinyint check (assistant_style between 0 and 2),
        valid boolean,
        id bigint generated by default as identity,
        moment TIMESTAMP WITHOUT TIME ZONE,
        user_id bigint,
        answer TEXT,
        code TEXT,
        feedback_user varchar(255),
        function_name varchar(255),
        thought TEXT,
        primary key (id)
    );

    create table tb_match (
        id bigint generated by default as identity,
        moment TIMESTAMP WITHOUT TIME ZONE,
        player1_id bigint,
        player2_id bigint,
        winner_id bigint,
        match_data TEXT,
        primary key (id)
    );

    create table tb_player (
        number_of_matches integer,
        number_of_winners integer,
        user_id bigint not null,
        nickname varchar(255),
        primary key (user_id)
    );

    create table tb_role (
        id bigint generated by default as identity,
        authority varchar(255),
        primary key (id)
    );

    create table tb_tournament (
        as_private boolean,
        current_participants integer not null,
        max_participants integer not null,
        created_at TIMESTAMP WITHOUT TIME ZONE,
        creator_id bigint,
        id bigint generated by default as identity,
        start_time TIMESTAMP WITHOUT TIME ZONE,
        winner_id bigint,
        description TEXT,
        name varchar(255),
        password varchar(255),
        bracket_json TEXT,
        status enum ('FINISHED','OPEN','RUNNING'),
        primary key (id)
    );

    create table tb_user (
        id bigint generated by default as identity,
        email varchar(255) unique,
        name varchar(255),
        password varchar(255),
        primary key (id)
    );

    create table tb_user_badges (
        badges_id bigint not null,
        user_id bigint not null,
        primary key (badges_id, user_id)
    );

    create table tb_user_role (
        role_id bigint not null,
        user_id bigint not null,
        primary key (role_id, user_id)
    );

    create table tb_user_tournaments (
        tournament_id bigint not null,
        user_id bigint not null,
        primary key (tournament_id, user_id)
    );

    alter table if exists tb_challenge 
       add constraint FK6gd5rxoht7avpj9ehl6px8qsp 
       foreign key (challenged_id) 
       references tb_user;

    alter table if exists tb_challenge 
       add constraint FKtht92xy4ue0jvuujqdx5wn0j9 
       foreign key (challenger_id) 
       references tb_user;

    alter table if exists tb_challenge 
       add constraint FK4ld8i3vewtugqecbwkqrvp54y 
       foreign key (match_id) 
       references tb_match;

    alter table if exists tb_function 
       add constraint FK5wttlbep1yi27pw1s566aayxt 
       foreign key (player_id) 
       references tb_user;

    alter table if exists tb_log_answers_agents 
       add constraint FKlwmmkifdqab4nj1dqcxyvq3ap 
       foreign key (user_id) 
       references tb_user;

    alter table if exists tb_match 
       add constraint FK7k7xv7aiim94f2cfa6j2gc7tp 
       foreign key (player1_id) 
       references tb_user;

    alter table if exists tb_match 
       add constraint FKamv27lus49dfcxa1pj3j5nig8 
       foreign key (player2_id) 
       references tb_user;

    alter table if exists tb_match 
       add constraint FKg649wfqv36w79tbrqu5u4o6hq 
       foreign key (winner_id) 
       references tb_user;

    alter table if exists tb_player 
       add constraint FKe6xc3nux2ktjun2b765d75d7i 
       foreign key (user_id) 
       references tb_user;

    alter table if exists tb_user_badges 
       add constraint FKfu4oe4lhdgx3s7h5v2yiqcip8 
       foreign key (badges_id) 
       references tb_badges;

    alter table if exists tb_user_badges 
       add constraint FKpu0107koffe2xgov3c93i3uxf 
       foreign key (user_id) 
       references tb_user;

    alter table if exists tb_user_role 
       add constraint FKea2ootw6b6bb0xt3ptl28bymv 
       foreign key (role_id) 
       references tb_role;

    alter table if exists tb_user_role 
       add constraint FK7vn3h53d0tqdimm8cp45gc0kl 
       foreign key (user_id) 
       references tb_user;

    alter table if exists tb_user_tournaments 
       add constraint FKfu5a5kp7d6shndspmrwr6ixaf 
       foreign key (tournament_id) 
       references tb_tournament;

    alter table if exists tb_user_tournaments 
       add constraint FKn2v0fur3ev5qcwkqen1ml7daq 
       foreign key (user_id) 
       references tb_user;
INSERT INTO tb_user (name, email, password) VALUES ('Lucas', 'lucas@gmail.com', '$2a$10$dM7v3Y9AUncErayHFkeR7Oo3Tb4ICzYVxSP5m/QlKOZ/AAyAUlVzm');
INSERT INTO tb_user (name, email, password) VALUES ('Maria', 'maria@example.com', '$2a$10$dM7v3Y9AUncErayHFkeR7Oo3Tb4ICzYVxSP5m/QlKOZ/AAyAUlVzm');
INSERT INTO tb_user (name, email, password) VALUES ('Admin', 'admin@gmail.com', '$2a$10$dM7v3Y9AUncErayHFkeR7Oo3Tb4ICzYVxSP5m/QlKOZ/AAyAUlVzm');
INSERT INTO tb_role (authority) VALUES ('ROLE_USER');
INSERT INTO tb_role (authority) VALUES ('ROLE_ADMIN');
INSERT INTO tb_user_role(user_id, role_id) values (1, 1);
INSERT INTO tb_user_role(user_id, role_id) values (2, 1);
INSERT INTO tb_user_role(user_id, role_id) values (3, 1);
INSERT INTO tb_user_role(user_id, role_id) values (3, 2);
INSERT INTO tb_badges (name, icon_url) values ('Aprendiz condicional!', 'test.png');
INSERT INTO tb_badges (name, icon_url) values ('Mestre do If/Else!', 'test.png');
INSERT INTO tb_badges (name, icon_url) values ('Ninja Condicional!', 'test.png');
